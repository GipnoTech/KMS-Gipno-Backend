<?php

namespace App\Orchid\Screens;

use App\Models\TrainingSection;
use Orchid\Screen\Actions\Button;
use Orchid\Screen\Actions\Link;
use Orchid\Screen\Fields\Label;
use Orchid\Screen\Screen;
use Orchid\Screen\TD;
use Orchid\Support\Facades\Layout;


class ViewTrainingScreen extends Screen
{
    public $training;
    /**
     * Fetch data to be displayed on the screen.
     *
     * @return array
     */
    public function query(\App\Models\Training $training): iterable
    {
        return [
            'training'=>$training
        ];
    }



    /**
     * The name of the screen displayed in the header.
     *
     * @return string|null
     */
    public function name(): ?string
    {
        return $this->training->name;
    }

//    public function description(): ?string
//    {
//        return $this->training->description; // TODO: Change the autogenerated stub
//    }

    /**
     * The screen's action buttons.
     *
     * @return \Orchid\Screen\Action[]
     */
    public function commandBar(): iterable
    {
        return [
            Link::make('')
                ->icon('pencil')
                ->canSee(true)
                ->route('kms.training.edit', ['training'=>$this->training->id])->class('btn btn-link fs-3'),
            Button::make('')->icon('trash')->method('deleteTraining')->class('btn btn-link fs-3')
        ];
    }
    public function deleteTraining(){
        $this->training->delete();
        return redirect()->route('kms.training');
    }

    /**
     * The screen's layout elements.
     *
     * @return \Orchid\Screen\Layout[]|string[]
     */
    public function layout(): iterable
    {

        $tabs=[];
        foreach ($this->training->sections as $tab){
        $tabs[$tab->title] = Layout::view('training-section', ['section'=>$tab]);
    }
        return [


            Layout::tabs($tabs)

        ];
    }
}
